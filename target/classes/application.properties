#spring.jpa.hibernate.ddl.-auto define como o sistema atuará perante o banco de dados caso seja utlizado:
# create ele apaga a tabela anterior e rescreve os dados deixando somente os preescritos no sistema
# create-drop ele reescreve os dados escreve e deleta ao final da aplicação
# none não acessa o banco de dados e não faz registro algum.
#update somente efetua atualizações no sistema e mantem a continuidade da gravação mesmo com tabela deletada.
#validate somente efetua validação dos dados e efetua novos cadastros mas caso tabela de registro não exista acusa erro e interrompe inicialização.
# caso ddl auto não estiver descrito neste documento ou somente comentado sistema não possuirá problemas de funcionamento e funcionará com registro continuo de dados.
#spring.jpa.hibernate.ddl-auto=create


spring.jpa.hibernate.ddl-auto=create
spring.datasource.dbcp2.url=jdbc:mysql://localhost:3308/dbprojeto1?useTimezone=true&serverTimezone=UTC-3&useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8
spring.datasource.continue-on-error= false
spring.datasource.data-username=teste
spring.datasource.data-password=teste
spring.jpa.show-sql = true


spring.h2.console.enabled=true
spring.h2.console.path=/h2


