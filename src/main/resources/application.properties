#spring.jpa.hibernate.ddl.-auto define como o sistema atuará perante o banco de dados caso seja utlizado:
# create ele apaga a tabela anterior e rescreve os dados deixando somente os preescritos no sistema
# create-drop ele reescreve os dados escreve e deleta ao final da aplicação
# none não acessa o banco de dados e não faz registro algum.
#update somente efetua atualizações no sistema e mantem a continuidade da gravação mesmo com tabela deletada.
#validate somente efetua validação dos dados e efetua novos cadastros mas caso tabela de registro não exista acusa erro e interrompe inicialização.
# caso ddl auto não estiver descrito neste documento ou somente comentado sistema não possuirá problemas de funcionamento e funcionará com registro continuo de dados.
#spring.jpa.hibernate.ddl-auto=create

    spring.datasource.url=jdbc:mysql://localhost:3308/dbprojeto1?useTimezone=true&serverTimezone=UTC&useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8
    spring.datasource.username=root
    spring.datasource.password=alvaro
    spring.datasource.driver-class-name=com.mysql.jdbc.Driver
    spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
    spring.jpa.generate-ddl=true
    spring.jpa.hibernate.ddl-auto = update
    spring.jpa.properties.hibernate.enable_lazy_load_no_trans= true
#server.servlet.context-path=/
#server.port=8080
